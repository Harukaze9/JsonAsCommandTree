{
    "__exec": "jact help",
    "help": {
        "__exec": "echo 'jact list: Show list of installed commands and scripts by JACT\njact install: Intall specified file (.json or .sh)\njact uninstall: Uninstall specified file (.json or .sh)'"
    },
    "_refresh": {
        "__exec": "source ${__jact_root_dir}/source-jact.sh"
    },
    "refresh": {
        "__exec": "jact _refresh; echo 'refresh completed!'"
    },
    "_list_commands": {
        "__exec": "find ${__jact_source_dir} -maxdepth 1 \\( -type f -o -type l \\) -name '*.json' | sed -E 's|.*\/([^\/]+)\\.json$|\\1\t(&)|'"
    },
    "_list_scripts": {
        "__exec": "find ${__jact_source_dir} -maxdepth 1 \\( -type f -o -type l \\) -name '*.sh' | sed -E 's|.*\/([^\/]+)\\.sh$|\\1.sh\t(&)|'"
    },
    "preset-commands": {
        "install": {
            "__exec": "for f in jj.json cdd.json store_extension.sh; do jact install \"${__jact_root_dir}\/gallery\/$f\" >\/dev\/null; done; echo -e \"Finished install presets!\\n\"; jact list"
        },
        "uninstall": {
            "__exec": "for f in jj.json cdd.json store_extension.sh; do rm -f \"${__jact_source_dir}\/$f\"; done; echo -e \"Finished uninstall presets!\\n\"; jact list"
        }
    },
    "list": {
        "__exec": "echo -e \"[JACT installed list]\\n====== [commands] ========\\n`jact _list_commands`\\n====== [scripts] =========\\n`jact _list_scripts` \\n==========================\""
    },
    "install": {
        "__exec": "ln -s $(realpath {0}) ${__jact_source_dir} && echo '[{0}] is installed!\n' && jact _refresh && jact list",
        "__0": "find . -maxdepth 1 \\( -type f -o -type l \\) \\( -name '*.json' -or -name '*.sh' \\) -exec basename {} \\;"
    },
    "uninstall": {
        "__exec": "rm ${__jact_source_dir}/{0} && echo '[{0}] is uninstalled!\n' && jact _refresh && jact list",
        "__0": "find ${__jact_source_dir} -maxdepth 1  \\( -type f -o -type l \\) \\( -name '*.json' -or -name '*.sh' \\) -exec basename {} \\;"
    },
    "edit": {
        "__exec": "vim $(realpath ${__jact_source_dir}/{0})",
        "__0": "find ${__jact_source_dir} -maxdepth 1  \\( -type f -o -type l \\) \\( -name '*.json' -or -name '*.sh' \\) -exec basename {} \\;"
    }
}